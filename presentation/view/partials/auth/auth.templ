package auth

import "github/mauljurassicia/nutrifeat/presentation/view/partials/layout"
import i "github.com/callsamu/templicons"

type AuthType string

const (
	Register AuthType = "register"
	Login    AuthType = "login"
)

templ AuthLayout(authType AuthType) {
	@layout.BasicLayout() {
		<div class="flex min-h-screen w-full">
			// Left side - Login form
			<div class="flex w-full lg:w-1/2 flex-col items-center justify-center px-6 py-12 lg:px-8">
				<div class="sm:mx-auto sm:w-full sm:max-w-sm">
					<div class="flex justify-center mb-6">
						<div class="flex items-center gap-2">
							@i.Icon("ion:nutrition", i.Params().SetDimensions(32, 32))
							<h2 class="text-3xl font-bold text-accent-foreground">Nutrifeat</h2>
						</div>
					</div>
					<h2 class="text-center text-2xl font-bold text-muted-foreground leading-9 tracking-tight">
						Selamat Datang
					</h2>
				</div>
				<div class="mt-10 sm:mx-auto sm:w-full sm:max-w-md">
					//  Handle form submission with standard HTML.  We'll use a server-side
					//  handler (e.g., in Go) to process the login.
					{ children... }
					<div class=" mt-3">
						//  These buttons will need JavaScript to handle the "toast"
						//  functionality.  We'll add basic placeholders here.
						<button
							class="w-full flex items-center justify-center gap-2 rounded-md border border-gray-300 bg-white px-3 py-2 shadow-sm focus:outline-none focus:ring-2 focus:ring-primary sm:text-sm font-medium text-gray-700 hover:bg-gray-50"
							onclick="showGoogleToast()"
						>
							@i.Icon("flat-color-icons:google", i.Params().SetDimensions(24, 24))
							<span>Sign in with Google</span>
						</button>
					</div>
					<p class="mt-10 text-center text-sm text-gray-500">
						if authType == Login {
							Don't have an account?
							<a href="/register" class="font-semibold leading-6 text-primary hover:text-primary\/80">
								Sign up
							</a>
						}
					</p>
				</div>
			</div>
			// Right side - Illustration
			<div class="hidden lg:flex lg:w-1/2 bg-secondary flex-col items-center justify-center relative p-8">
				<img
					src="/lovable-uploads/269a6091-5599-40ce-91d4-595e46d8badd.png"
					alt="Security illustration"
					class="w-3/4 max-w-md mb-8 z-10"
				/>
				<div class="text-center max-w-lg text-white z-10">
					<p class="text-lg">
						Secure your information with our state-of-the-art authentication system.
					</p>
				</div>
				// Background decorative elements
				<div class="absolute inset-0 overflow-hidden">
					<div class="absolute top-20 left-20 w-32 h-32 bg-teal-800/20 rounded-full"></div>
					<div class="absolute bottom-20 right-20 w-48 h-48 bg-teal-800/20 rounded-full"></div>
				</div>
			</div>
			// Placeholder for toast notifications.  In a real application, you'd
			// likely have a more sophisticated implementation.
			<div id="toast-container" class="fixed bottom-4 right-4 z-50"></div>
			// JavaScript to handle the placeholder toast notifications.
			<script>
        function showToast(title, description) {
            const container = document.getElementById('toast-container');
            const toast = document.createElement('div');
            toast.className = `bg-white border-l-4 border-primary text-gray-700 p-4 rounded shadow-md mb-2`;
            toast.innerHTML = `
                <strong class="font-bold">${title}</strong>
                <span class="block sm:inline">${description}</span>
            `;
            container.appendChild(toast);

            // Remove the toast after a few seconds
            setTimeout(() => {
                toast.remove();
            }, 3000); // 3 seconds
        }

        function showFacebookToast() {
            showToast("Facebook Sign In", "Facebook authentication initiated");
        }

        function showGoogleToast() {
            showToast("Google Sign In", "Google authentication initiated");
        }
        </script>
		</div>
	}
}
