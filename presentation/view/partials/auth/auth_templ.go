// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.833
package auth

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "github/mauljurassicia/nutrifeat/presentation/view/partials/layout"
import i "github.com/callsamu/templicons"

type AuthType string

const (
	Register AuthType = "register"
	Login    AuthType = "login"
)

func AuthLayout(authType AuthType) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"flex min-h-screen w-full\"><div class=\"flex w-full lg:w-1/2 flex-col items-center justify-center px-6 py-12 lg:px-8\"><div class=\"sm:mx-auto sm:w-full sm:max-w-sm\"><div class=\"flex justify-center mb-6\"><div class=\"flex items-center gap-2\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = i.Icon("ion:nutrition", i.Params().SetDimensions(32, 32)).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<h2 class=\"text-3xl font-bold text-accent-foreground\">Nutrifeat</h2></div></div><h2 class=\"text-center text-2xl font-bold text-muted-foreground leading-9 tracking-tight\">Selamat Datang</h2></div><div class=\"mt-10 sm:mx-auto sm:w-full sm:max-w-md\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templ_7745c5c3_Var1.Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "<div class=\" mt-3\"><button class=\"w-full flex items-center justify-center gap-2 rounded-md border border-gray-300 bg-white px-3 py-2 shadow-sm focus:outline-none focus:ring-2 focus:ring-primary sm:text-sm font-medium text-gray-700 hover:bg-gray-50\" onclick=\"showGoogleToast()\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = i.Icon("flat-color-icons:google", i.Params().SetDimensions(24, 24)).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "<span>Sign in with Google</span></button></div><p class=\"mt-10 text-center text-sm text-gray-500\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if authType == Login {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "Don't have an account? <a href=\"/register\" class=\"font-semibold leading-6 text-primary hover:text-primary\\/80\">Sign up</a>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "</p></div></div><div class=\"hidden lg:flex lg:w-1/2 bg-secondary flex-col items-center justify-center relative p-8\"><img src=\"/lovable-uploads/269a6091-5599-40ce-91d4-595e46d8badd.png\" alt=\"Security illustration\" class=\"w-3/4 max-w-md mb-8 z-10\"><div class=\"text-center max-w-lg text-white z-10\"><p class=\"text-lg\">Secure your information with our state-of-the-art authentication system.</p></div><div class=\"absolute inset-0 overflow-hidden\"><div class=\"absolute top-20 left-20 w-32 h-32 bg-teal-800/20 rounded-full\"></div><div class=\"absolute bottom-20 right-20 w-48 h-48 bg-teal-800/20 rounded-full\"></div></div></div><div id=\"toast-container\" class=\"fixed bottom-4 right-4 z-50\"></div><script>\r\n        function showToast(title, description) {\r\n            const container = document.getElementById('toast-container');\r\n            const toast = document.createElement('div');\r\n            toast.className = `bg-white border-l-4 border-primary text-gray-700 p-4 rounded shadow-md mb-2`;\r\n            toast.innerHTML = `\r\n                <strong class=\"font-bold\">${title}</strong>\r\n                <span class=\"block sm:inline\">${description}</span>\r\n            `;\r\n            container.appendChild(toast);\r\n\r\n            // Remove the toast after a few seconds\r\n            setTimeout(() => {\r\n                toast.remove();\r\n            }, 3000); // 3 seconds\r\n        }\r\n\r\n        function showFacebookToast() {\r\n            showToast(\"Facebook Sign In\", \"Facebook authentication initiated\");\r\n        }\r\n\r\n        function showGoogleToast() {\r\n            showToast(\"Google Sign In\", \"Google authentication initiated\");\r\n        }\r\n        </script></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = layout.BasicLayout().Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
